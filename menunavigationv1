#include <M5StickCPlus.h>

// Menu configuration
const char* menuItems[] = {"Option 1", "Option 2", "Option 3", "Option 4", "Option 5", 
                           "Option 6", "Option 7", "Option 8", "Option 9", "Option 10"};
int menuIndex = 0; // Currently selected menu item
int menuSize = sizeof(menuItems) / sizeof(menuItems[0]);

// Thresholds
const float leftThreshold = 0.99;  // Move left when ax > 0.99
const float rightThreshold = -0.99; // Move right when ax < -0.99

// Debounce timing
unsigned long lastMoveTime = 0;
const unsigned long debounceDelay = 200; // 300ms delay to avoid multiple triggers

// Serial readout delay
const unsigned long serialDelay = 200; // Delay between serial prints (in milliseconds)
unsigned long lastSerialTime = 0;

void setup() {
  M5.begin();
  M5.IMU.Init();
  M5.Lcd.setRotation(1); // Landscape orientation
  M5.Lcd.fillScreen(BLACK);
  M5.Lcd.setTextSize(2);
  M5.Lcd.setCursor(10, 30);
  M5.Lcd.println("Menu Navigation");

  // Start serial communication for debugging
  Serial.begin(115200);

  // Show the initial menu item
  displayMenu();
}

void loop() {
  float ax, ay, az;
  M5.IMU.getAccelData(&ax, &ay, &az);

  unsigned long currentTime = millis();

  // Only print to serial every 'serialDelay' milliseconds
  if ((currentTime - lastSerialTime) > serialDelay) {
    // Print the accelerometer values to the serial monitor
    Serial.print("ax: "); Serial.print(ax, 2);
    Serial.print("  ay: "); Serial.print(ay, 2);
    Serial.print("  az: "); Serial.println(az, 2);

    lastSerialTime = currentTime; // Update the last serial print time
  }

  // Navigate menu
  if ((currentTime - lastMoveTime) > debounceDelay) {
    if (ax > leftThreshold) { // Move left
      menuIndex--;
      if (menuIndex < 0) menuIndex = menuSize - 1; // Wrap around to the last item
      lastMoveTime = currentTime;
      displayMenu();
    } else if (ax < rightThreshold) { // Move right
      menuIndex++;
      if (menuIndex >= menuSize) menuIndex = 0; // Wrap around to the first item
      lastMoveTime = currentTime;
      displayMenu();
    }
  }
}

void displayMenu() {
  M5.Lcd.fillScreen(BLACK);
  M5.Lcd.setCursor(10, 30);
  M5.Lcd.setTextColor(WHITE, BLACK);
  M5.Lcd.printf("Selected: %s", menuItems[menuIndex]);
}
